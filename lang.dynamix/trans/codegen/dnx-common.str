module dnx-common

imports
  signatures/Dynamix-sig

signature
  sorts S
  constructors    
    Module : STRING * [Import] * [STRING] * [Def] * [Def]  * [STRING] -> S
    NormModule: [STRING] * [STRING] * [NormDef] -> S
    DefGroup: STRING * [DefCase] -> S
    DefCase: [Pattern] * [STRING] * [instruction] -> S
    DNX_BindExp: [STRING] * [Exp] -> S
    MatchError: STRING -> S

     
rules
    new-static: (name, val) -> val
      with
        <set-counter> (name, val)
        
    get-static: name -> val 
      where
        val := <get-counter> name;
        <set-counter> (name, val)
        
    update-static: (name, val) -> val 
      where
        <set-counter> (name, val)
        
    find-index(s): [] -> <fail> 
    find-index(s): [name|_] -> 0 where <s> name
    find-index(s): [h|t] -> <find-index(s); inc> t
    
    update-map: ([], key, val) -> <fail>
    update-map: ([(key, _) | t], key, val) -> [(key, val) | t]
    update-map: ([ h | t], key, val) -> [ h | <update-map> (t, key, val)]
    
    